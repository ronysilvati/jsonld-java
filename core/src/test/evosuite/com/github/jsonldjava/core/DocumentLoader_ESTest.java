/*
 * This file was automatically generated by EvoSuite
 * Wed Feb 26 13:54:25 GMT 2020
 */

package com.github.jsonldjava.core;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.jsonldjava.core.DocumentLoader;
import com.github.jsonldjava.core.RemoteDocument;
import org.apache.http.impl.client.CloseableHttpClient;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DocumentLoader_ESTest extends DocumentLoader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DocumentLoader documentLoader0 = new DocumentLoader();
      try { 
        documentLoader0.addInjectedDoc("overflow, value cannot be represented as 16-bit value", "com.github.jsonldjava.disallowRemoteContextLoading");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // loading injected context failed: java.lang.String@0000000009
         //
         verifyException("com.github.jsonldjava.core.DocumentLoader", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DocumentLoader documentLoader0 = new DocumentLoader();
      // Undeclared exception!
      documentLoader0.getHttpClient();
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DocumentLoader documentLoader0 = new DocumentLoader();
      documentLoader0.addInjectedDoc("", "2");
      RemoteDocument remoteDocument0 = documentLoader0.loadDocument("");
      assertEquals("", remoteDocument0.getDocumentUrl());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DocumentLoader documentLoader0 = new DocumentLoader();
      try { 
        documentLoader0.loadDocument("com.github.jsonldjava.disallowRemoteContextLoading");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // loading remote context failed: java.lang.String@0000000002
         //
         verifyException("com.github.jsonldjava.core.DocumentLoader", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DocumentLoader documentLoader0 = new DocumentLoader();
      documentLoader0.setHttpClient((CloseableHttpClient) null);
  }
}
