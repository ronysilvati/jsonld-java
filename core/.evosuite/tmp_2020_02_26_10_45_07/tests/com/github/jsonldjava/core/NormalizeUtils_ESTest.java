/*
 * This file was automatically generated by EvoSuite
 * Wed Feb 26 13:50:44 GMT 2020
 */

package com.github.jsonldjava.core;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.jsonldjava.core.JsonLdOptions;
import com.github.jsonldjava.core.NormalizeUtils;
import com.github.jsonldjava.core.RDFDataset;
import com.github.jsonldjava.core.UniqueNamer;
import java.util.ArrayDeque;
import java.util.ArrayList;
import java.util.Collection;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.PriorityQueue;
import java.util.Stack;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NormalizeUtils_ESTest extends NormalizeUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Stack<Object> stack0 = new Stack<Object>();
      RDFDataset.BlankNode rDFDataset_BlankNode0 = new RDFDataset.BlankNode("");
      RDFDataset.Quad rDFDataset_Quad0 = new RDFDataset.Quad(rDFDataset_BlankNode0, rDFDataset_BlankNode0, rDFDataset_BlankNode0, "");
      UniqueNamer uniqueNamer0 = new UniqueNamer("d1vy.`dl6LV7#");
      JsonLdOptions jsonLdOptions0 = new JsonLdOptions((String) null);
      NormalizeUtils normalizeUtils0 = new NormalizeUtils(stack0, rDFDataset_Quad0, uniqueNamer0, jsonLdOptions0);
      jsonLdOptions0.format = "d1vy.`dl6LV7#";
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      try { 
        normalizeUtils0.hashBlankNodes(arrayDeque0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unknown format: java.lang.String@0000000008
         //
         verifyException("com.github.jsonldjava.core.NormalizeUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Stack<Object> stack0 = new Stack<Object>();
      RDFDataset.BlankNode rDFDataset_BlankNode0 = new RDFDataset.BlankNode("\",+#M+[ec^C,zKy");
      UniqueNamer uniqueNamer0 = new UniqueNamer("value");
      JsonLdOptions jsonLdOptions0 = new JsonLdOptions("\",+#M+[ec^C,zKy");
      NormalizeUtils normalizeUtils0 = new NormalizeUtils(stack0, rDFDataset_BlankNode0, uniqueNamer0, jsonLdOptions0);
      RDFDataset.IRI rDFDataset_IRI0 = new RDFDataset.IRI((String) null);
      RDFDataset.Quad rDFDataset_Quad0 = new RDFDataset.Quad(rDFDataset_BlankNode0, rDFDataset_BlankNode0, rDFDataset_IRI0, (String) null);
      stack0.add((Object) rDFDataset_Quad0);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      // Undeclared exception!
      try { 
        normalizeUtils0.hashBlankNodes(arrayList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.jsonldjava.core.RDFDatasetUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Stack<Object> stack0 = new Stack<Object>();
      RDFDataset.BlankNode rDFDataset_BlankNode0 = new RDFDataset.BlankNode("");
      RDFDataset.Quad rDFDataset_Quad0 = new RDFDataset.Quad(rDFDataset_BlankNode0, rDFDataset_BlankNode0, rDFDataset_BlankNode0, "");
      stack0.addElement(rDFDataset_Quad0);
      JsonLdOptions jsonLdOptions0 = new JsonLdOptions("");
      UniqueNamer uniqueNamer0 = new UniqueNamer("");
      NormalizeUtils normalizeUtils0 = new NormalizeUtils(stack0, rDFDataset_Quad0, uniqueNamer0, jsonLdOptions0);
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      try { 
        normalizeUtils0.hashBlankNodes(arrayDeque0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error: java.lang.String@0000000009
         //
         verifyException("com.github.jsonldjava.core.RDFDatasetUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      RDFDataset.BlankNode rDFDataset_BlankNode0 = new RDFDataset.BlankNode("uU{^|7W7EZ");
      JsonLdOptions jsonLdOptions0 = new JsonLdOptions();
      UniqueNamer uniqueNamer0 = new UniqueNamer(",&j&={<");
      NormalizeUtils normalizeUtils0 = new NormalizeUtils(linkedList0, rDFDataset_BlankNode0, uniqueNamer0, jsonLdOptions0);
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      PriorityQueue<String> priorityQueue0 = new PriorityQueue<String>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList1, (Collection<String>) priorityQueue0, locale_FilteringMode0);
      linkedList0.add((Object) locale_FilteringMode0);
      // Undeclared exception!
      try { 
        normalizeUtils0.hashBlankNodes(list0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.util.Locale$FilteringMode cannot be cast to java.util.Map
         //
         verifyException("com.github.jsonldjava.core.NormalizeUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      RDFDataset.Quad rDFDataset_Quad0 = new RDFDataset.Quad("", "", "", "", "", "");
      UniqueNamer uniqueNamer0 = new UniqueNamer("");
      JsonLdOptions jsonLdOptions0 = new JsonLdOptions();
      NormalizeUtils normalizeUtils0 = new NormalizeUtils(vector0, rDFDataset_Quad0, uniqueNamer0, jsonLdOptions0);
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      linkedHashSet0.add("json-ld-1.1");
      // Undeclared exception!
      try { 
        normalizeUtils0.hashBlankNodes(linkedHashSet0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      RDFDataset.BlankNode rDFDataset_BlankNode0 = new RDFDataset.BlankNode("uU{^|7W7EZ");
      JsonLdOptions jsonLdOptions0 = new JsonLdOptions();
      UniqueNamer uniqueNamer0 = new UniqueNamer(",&j&={<");
      NormalizeUtils normalizeUtils0 = new NormalizeUtils(linkedList0, rDFDataset_BlankNode0, uniqueNamer0, jsonLdOptions0);
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      PriorityQueue<String> priorityQueue0 = new PriorityQueue<String>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList1, (Collection<String>) priorityQueue0, locale_FilteringMode0);
      RDFDataset rDFDataset0 = (RDFDataset)normalizeUtils0.hashBlankNodes(list0);
      assertFalse(rDFDataset0.isEmpty());
  }
}
