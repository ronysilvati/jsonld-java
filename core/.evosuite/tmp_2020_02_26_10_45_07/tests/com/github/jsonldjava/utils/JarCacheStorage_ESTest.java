/*
 * This file was automatically generated by EvoSuite
 * Wed Feb 26 13:53:26 GMT 2020
 */

package com.github.jsonldjava.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.node.ArrayNode;
import com.fasterxml.jackson.databind.node.JsonNodeFactory;
import com.github.jsonldjava.utils.JarCacheStorage;
import java.io.IOException;
import java.net.URI;
import java.net.URL;
import org.apache.http.client.cache.HttpCacheEntry;
import org.apache.http.client.cache.HttpCacheStorage;
import org.apache.http.client.cache.HttpCacheUpdateCallback;
import org.apache.http.impl.client.cache.BasicHttpCacheStorage;
import org.apache.http.impl.client.cache.CacheConfig;
import org.apache.http.impl.client.cache.ManagedHttpCacheStorage;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JarCacheStorage_ESTest extends JarCacheStorage_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CacheConfig cacheConfig0 = CacheConfig.DEFAULT;
      ManagedHttpCacheStorage managedHttpCacheStorage0 = new ManagedHttpCacheStorage(cacheConfig0);
      JarCacheStorage jarCacheStorage0 = new JarCacheStorage((ClassLoader) null, cacheConfig0, managedHttpCacheStorage0);
      managedHttpCacheStorage0.close();
      // Undeclared exception!
      try { 
        jarCacheStorage0.removeEntry("Cache config cannot be null");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Cache has been shut down
         //
         verifyException("org.apache.http.impl.client.cache.ManagedHttpCacheStorage", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CacheConfig cacheConfig0 = CacheConfig.DEFAULT;
      ManagedHttpCacheStorage managedHttpCacheStorage0 = new ManagedHttpCacheStorage(cacheConfig0);
      JarCacheStorage jarCacheStorage0 = new JarCacheStorage((ClassLoader) null, cacheConfig0, managedHttpCacheStorage0);
      // Undeclared exception!
      try { 
        jarCacheStorage0.putEntry("", (HttpCacheEntry) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Cache entry may not be null
         //
         verifyException("org.apache.http.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      CacheConfig cacheConfig0 = CacheConfig.DEFAULT;
      BasicHttpCacheStorage basicHttpCacheStorage0 = new BasicHttpCacheStorage(cacheConfig0);
      JarCacheStorage jarCacheStorage0 = new JarCacheStorage(classLoader0, cacheConfig0, basicHttpCacheStorage0);
      URL uRL0 = MockURL.getFtpExample();
      // Undeclared exception!
      try { 
        jarCacheStorage0.getJarCache(uRL0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.NullPointerException
         //
         verifyException("com.google.common.cache.LocalCache$Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CacheConfig cacheConfig0 = CacheConfig.DEFAULT;
      ManagedHttpCacheStorage managedHttpCacheStorage0 = new ManagedHttpCacheStorage(cacheConfig0);
      JarCacheStorage jarCacheStorage0 = new JarCacheStorage((ClassLoader) null, cacheConfig0, managedHttpCacheStorage0);
      // Undeclared exception!
      try { 
        jarCacheStorage0.getJarCache((URL) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      CacheConfig cacheConfig0 = CacheConfig.DEFAULT;
      BasicHttpCacheStorage basicHttpCacheStorage0 = new BasicHttpCacheStorage(cacheConfig0);
      JarCacheStorage jarCacheStorage0 = new JarCacheStorage(classLoader0, cacheConfig0, basicHttpCacheStorage0);
      MockFile mockFile0 = new MockFile("Content-Location");
      URL uRL0 = mockFile0.toURL();
      try { 
        jarCacheStorage0.getJarCache(uRL0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Failed to retrieve jar cache for URL: file:/C:/Users/ronys/git/jsonld-java/core/Content-Location
         //
         verifyException("com.github.jsonldjava.utils.JarCacheStorage", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CacheConfig cacheConfig0 = CacheConfig.DEFAULT;
      JarCacheStorage jarCacheStorage0 = new JarCacheStorage((ClassLoader) null, cacheConfig0);
      // Undeclared exception!
      try { 
        jarCacheStorage0.getEntry((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.URI$Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      CacheConfig cacheConfig0 = CacheConfig.DEFAULT;
      ManagedHttpCacheStorage managedHttpCacheStorage0 = new ManagedHttpCacheStorage(cacheConfig0);
      JarCacheStorage jarCacheStorage0 = new JarCacheStorage(classLoader0, cacheConfig0, managedHttpCacheStorage0);
      managedHttpCacheStorage0.close();
      // Undeclared exception!
      try { 
        jarCacheStorage0.getEntry("xz+hW$]Hpc_!u4&I8H");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Cache has been shut down
         //
         verifyException("org.apache.http.impl.client.cache.ManagedHttpCacheStorage", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      CacheConfig cacheConfig0 = CacheConfig.DEFAULT;
      JarCacheStorage jarCacheStorage0 = null;
      try {
        jarCacheStorage0 = new JarCacheStorage(classLoader0, cacheConfig0, (HttpCacheStorage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Delegate cannot be null
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      JarCacheStorage jarCacheStorage0 = null;
      try {
        jarCacheStorage0 = new JarCacheStorage(classLoader0, (CacheConfig) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.http.impl.client.cache.BasicHttpCacheStorage", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      CacheConfig cacheConfig0 = CacheConfig.DEFAULT;
      ManagedHttpCacheStorage managedHttpCacheStorage0 = new ManagedHttpCacheStorage(cacheConfig0);
      JarCacheStorage jarCacheStorage0 = new JarCacheStorage((ClassLoader) null, cacheConfig0, managedHttpCacheStorage0);
      jarCacheStorage0.setClassLoader(classLoader0);
      ClassLoader classLoader1 = jarCacheStorage0.getClassLoader();
      assertSame(classLoader1, classLoader0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      CacheConfig cacheConfig0 = CacheConfig.DEFAULT;
      JarCacheStorage jarCacheStorage0 = new JarCacheStorage(classLoader0, cacheConfig0);
      HttpCacheEntry httpCacheEntry0 = jarCacheStorage0.getEntry("o Fc=BX-5' ");
      assertNull(httpCacheEntry0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CacheConfig cacheConfig0 = CacheConfig.DEFAULT;
      ManagedHttpCacheStorage managedHttpCacheStorage0 = new ManagedHttpCacheStorage(cacheConfig0);
      JarCacheStorage jarCacheStorage0 = new JarCacheStorage((ClassLoader) null, cacheConfig0, managedHttpCacheStorage0);
      ClassLoader classLoader0 = jarCacheStorage0.getClassLoader();
      assertNotNull(classLoader0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      CacheConfig cacheConfig0 = CacheConfig.DEFAULT;
      JarCacheStorage jarCacheStorage0 = new JarCacheStorage(classLoader0, cacheConfig0);
      // Undeclared exception!
      try { 
        jarCacheStorage0.updateEntry("", (HttpCacheUpdateCallback) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.http.impl.client.cache.BasicHttpCacheStorage", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      CacheConfig cacheConfig0 = CacheConfig.DEFAULT;
      JarCacheStorage jarCacheStorage0 = new JarCacheStorage(classLoader0, cacheConfig0);
      jarCacheStorage0.putEntry("", (HttpCacheEntry) null);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CacheConfig cacheConfig0 = CacheConfig.DEFAULT;
      ManagedHttpCacheStorage managedHttpCacheStorage0 = new ManagedHttpCacheStorage(cacheConfig0);
      JarCacheStorage jarCacheStorage0 = new JarCacheStorage((ClassLoader) null, cacheConfig0, managedHttpCacheStorage0);
      jarCacheStorage0.removeEntry("Malformed numeric value (");
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      CacheConfig cacheConfig0 = CacheConfig.DEFAULT;
      JarCacheStorage jarCacheStorage0 = new JarCacheStorage(classLoader0, cacheConfig0);
      CacheConfig cacheConfig1 = jarCacheStorage0.getCacheConfig();
      assertEquals(1000, CacheConfig.DEFAULT_MAX_CACHE_ENTRIES);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      CacheConfig cacheConfig0 = CacheConfig.DEFAULT;
      JarCacheStorage jarCacheStorage0 = new JarCacheStorage(classLoader0, cacheConfig0);
      try { 
        jarCacheStorage0.getEntry("ONX:uOZ-zA");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Failed to retrieve jar cache for URL: file:/C:/Users/ronys/git/jsonld-java/core/target/test-classes/jarcache.json
         //
         verifyException("com.github.jsonldjava.utils.JarCacheStorage", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CacheConfig cacheConfig0 = CacheConfig.DEFAULT;
      JarCacheStorage jarCacheStorage0 = new JarCacheStorage((ClassLoader) null, cacheConfig0);
      URI uRI0 = MockURI.URI("");
      URL uRL0 = MockURL.getFtpExample();
      JsonNodeFactory jsonNodeFactory0 = JsonNodeFactory.instance;
      ArrayNode arrayNode0 = new ArrayNode(jsonNodeFactory0, 1);
      JsonNode jsonNode0 = arrayNode0.findPath(")>R$E3*MF_ E('d8");
      // Undeclared exception!
      try { 
        jarCacheStorage0.cacheEntry(uRI0, uRL0, jsonNode0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.jsonldjava.utils.JarCacheStorage", e);
      }
  }
}
