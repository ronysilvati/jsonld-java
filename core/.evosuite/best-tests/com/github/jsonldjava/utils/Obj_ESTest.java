/*
 * This file was automatically generated by EvoSuite
 * Wed Feb 26 13:53:26 GMT 2020
 */

package com.github.jsonldjava.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.jsonldjava.utils.Obj;
import java.util.LinkedHashMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Obj_ESTest extends Obj_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Map<String, Object> map0 = Obj.newMap();
      boolean boolean0 = Obj.equals((Object) map0, (Object) "N!lKbYs2,RyB!!:E/");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Map<String, Object> map0 = Obj.newMap();
      // Undeclared exception!
      try { 
        Obj.put((Object) map0, "com.github.jsonldjava.utils.Obj", "", "", (Object) map0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.jsonldjava.utils.Obj", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Map<String, Object> map0 = Obj.newMap();
      Map<String, Object> map1 = Obj.newMap("oQ", (Object) null);
      // Undeclared exception!
      try { 
        Obj.put((Object) map0, "oQ", "oQ", (Object) map1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.jsonldjava.utils.Obj", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Map<String, Object> map0 = Obj.newMap("", (Object) "");
      LinkedHashMap linkedHashMap0 = (LinkedHashMap)Obj.put((Object) map0, "", (Object) "");
      assertFalse(linkedHashMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Map<String, Object> map0 = Obj.newMap();
      // Undeclared exception!
      try { 
        Obj.remove(map0, "t(@&}@97,[F;/}on", "+i}soe.8u7");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.jsonldjava.utils.Obj", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        Obj.put((Object) null, "vC(0i_mM{=\"A@8/t", "", "", "com.github.jsonldjava.utils.Obj", (Object) "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.jsonldjava.utils.Obj", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Map<String, Object> map0 = Obj.newMap();
      Object object0 = Obj.put((Object) map0, "", (Object) map0);
      // Undeclared exception!
      try { 
        Obj.put((Object) "", "", "", "", "", object0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to java.util.Map
         //
         verifyException("com.github.jsonldjava.utils.Obj", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        Obj.put((Object) "", "", "com.github.jsonldjava.utils.Obj", "", (Object) "com.github.jsonldjava.utils.Obj");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to java.util.Map
         //
         verifyException("com.github.jsonldjava.utils.Obj", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        Obj.put((Object) "", "", "", (Object) "");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to java.util.Map
         //
         verifyException("com.github.jsonldjava.utils.Obj", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      // Undeclared exception!
      try { 
        Obj.put((Object) null, "A%U", (Object) "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.jsonldjava.utils.Obj", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      // Undeclared exception!
      try { 
        Obj.put((Object) "", (String) null, (Object) "1#g+`#I\"TSL<");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to java.util.Map
         //
         verifyException("com.github.jsonldjava.utils.Obj", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Map<String, Object> map0 = Obj.newMap();
      // Undeclared exception!
      try { 
        Obj.get(map0, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.jsonldjava.utils.Obj", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Map<String, Object> map0 = Obj.newMap("com.github.jsonldjava.utils.Obj", (Object) "com.github.jsonldjava.utils.Obj");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "com.github.jsonldjava.utils.Obj";
      // Undeclared exception!
      try { 
        Obj.get(map0, stringArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to java.util.Map
         //
         verifyException("com.github.jsonldjava.utils.Obj", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try { 
        Obj.contains("a+_kX ", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.jsonldjava.utils.Obj", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String[] stringArray0 = new String[5];
      // Undeclared exception!
      try { 
        Obj.contains("", stringArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to java.util.Map
         //
         verifyException("com.github.jsonldjava.utils.Obj", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      boolean boolean0 = Obj.equals((Object) null, (Object) "");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      boolean boolean0 = Obj.equals((Object) null, (Object) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Map<String, Object> map0 = Obj.newMap();
      String[] stringArray0 = new String[3];
      boolean boolean0 = Obj.contains(map0, stringArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Map<String, Object> map0 = Obj.newMap("", (Object) "");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      boolean boolean0 = Obj.contains(map0, stringArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Map<String, Object> map0 = Obj.newMap();
      String[] stringArray0 = new String[5];
      Object object0 = Obj.get(map0, stringArray0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Map<String, Object> map0 = Obj.newMap();
      Object object0 = Obj.put((Object) map0, "", (Object) map0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      Object object1 = Obj.get(map0, stringArray0);
      assertSame(object1, object0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Obj obj0 = new Obj();
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      // Undeclared exception!
      try { 
        Obj.remove("3(\"Y%k%s'K*r#${] ", "", ".sy");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to java.util.Map
         //
         verifyException("com.github.jsonldjava.utils.Obj", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Map<String, Object> map0 = Obj.newMap();
      LinkedHashMap linkedHashMap0 = (LinkedHashMap)Obj.put((Object) map0, "", (Object) map0);
      Obj.put((Object) linkedHashMap0, "", "", "", ".sy", (Object) "");
      assertEquals(2, linkedHashMap0.size());
      assertEquals(2, map0.size());
  }
}
